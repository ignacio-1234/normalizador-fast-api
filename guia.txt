

üßπ Reglas de Limpieza y Validaci√≥n
- Eliminar duplicados exactos
- Filtrar entradas duplicadas por combinaci√≥n de nombre_lugar, direccion y georeferencia.
- Separaci√≥n de georeferencia
- Partir la columna Georeferencia en dos campos: latitud y longitud.
- Segmentar direcci√≥n completa
- Descomponer Direcci√≥n Completa si es posible, en ciudad, regi√≥n y pa√≠s.
- Si no es posible separar todo, dejar en campos faltantes como NULL o por defecto Desconocido.
- Validar coordenadas
- Latitud debe estar entre -90 y 90, longitud entre -180 y 180.
- Rechazar coordenadas vac√≠as o mal formateadas.
- Validar texto
- Asegurar que los campos de texto no est√©n vac√≠os y est√©n correctamente codificados.
- Normalizar uso de may√∫sculas con .strip().title().
- Control de ambig√ºedad por ubicaci√≥n
- Si un mismo nombre_lugar aparece con distintas coordenadas (ej. ‚ÄúApple Park‚Äù), tratar cada ubicaci√≥n como entrada independiente, salvo que represente realmente el mismo sitio.
- Consistencia geogr√°fica m√≠nima
- Verificar que la ciudad y pa√≠s est√©n presentes para cada registro


Tabla Lugares
- id_lugar: entero, clave primaria, autoincremental
- nombre_lugar: string normalizado (ej. "Eiffel Tower")


2. Tabla Direcciones
- id_lugar: entero, clave for√°nea a Lugares.id_lugar
- direccion: campo completo, incluyendo calle, n√∫mero o zona
- ciudad: opcional (por si no est√° en la direcci√≥n)
- region_estado: opcional
- pais: obligatorio


3. Tabla Georeferencias
- id_lugar: entero, clave for√°nea a Lugares.id_lugar
- latitud: float entre -90 y 90
- longitud: float entre -180 y 180

Adem√°s de las tablas, aplic√°bamos estas reglas:
- Separar coordenadas en latitud y longitud
- Validar duplicados con nombre + direcci√≥n + coordenadas
- Normalizar texto (ej. .strip().title())
- Validar campos requeridos: nombre del lugar, pa√≠s, coordenadas v√°lidas
- Usar claves for√°neas para mantener integridad
Cuando tengas los modelos en SQLModel, m√°ndalos y los revisamos juntos. ¬øTe gustar√≠a que te d√© una plantilla de ejemplo por si quieres copiar y pegarla como base?


"parsing inverso" 
para organizar la direcciones